package com.gss.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;

import com.gss.connection.JDBCConnection;
import com.gss.model.Package;
import com.gss.model.Product;
import com.gss.model.ProductPackage;
import com.gss.model.Service;
import com.gss.model.ServicePackage;

public class PackageJDBCRepository implements PackageRepository{

	private JDBCConnection jdbc = new JDBCConnection();
	
	@Override
	public boolean createPackage(Package pack) {
		
		Connection con = jdbc.getConnection();
		ResultSet set1;
		String strQuery1 = "CALL createPackage(?, ?, ?, ?, ?)"; 
		String strQuery2 = "CALL createProductPackage(?, ?, ?)";
		String strQuery3 = "CALL createServicePackage(?, ?)";
		int intPackageID = 0;
		//name, desc, type, head, packageavail
		//packageid, productid, quantity
		//packageid, serviceid
		try{
			
			PreparedStatement pre1 = con.prepareStatement(strQuery1);
			pre1.setString(1, pack.getStrPackageName());
			pre1.setString(2, pack.getStrPackageDesc());
			pre1.setInt(3, pack.getIntPackageType());
			pre1.setInt(4, pack.getIntMaxHeadCount());
			pre1.setString(5, pack.getStrPackageAvailability());
			
			set1 = pre1.executeQuery();
			
			while(set1.next()){
				intPackageID = set1.getInt(1);
			}
			
			pre1.close();
			
			for(int intCtr = 0; intCtr < pack.getServiceList().size(); intCtr++){
				ServicePackage servicePack = pack.getServiceList().get(intCtr);
				Service service = servicePack.getService();
				
				PreparedStatement pre2 = con.prepareStatement(strQuery3);
				pre2.setInt(1, intPackageID);
				pre2.setInt(2, service.getIntServiceID());
				pre2.execute();
				pre2.close();
			}
			
			for(int intCtr = 0; intCtr < pack.getProductList().size(); intCtr++){
				ProductPackage productPack = pack.getProductList().get(intCtr);
				Product product = productPack.getProduct();
				
				PreparedStatement pre2 = con.prepareStatement(strQuery2);
				pre2.setInt(1, intPackageID);
				pre2.setInt(2, product.getIntProductID());
				pre2.setInt(3, productPack.getIntProductQuantity());
				pre2.execute();
				pre2.close();
			}
			
			con.close();
			return true;
			
		}
		catch(Exception e){
			System.out.println(e.fillInStackTrace());
			return false;
		}
	}

	@Override
	public boolean updatePackage(Package pack) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<Package> getAllPackage() {
		// TODO Auto-generated method stub
		return null;
	}

}
